---
import '../styles/index.css';

interface Props {
	title: string;
}

const { title } = Astro.props;

import '@fortawesome/fontawesome-free/css/all.min.css';

import Header from './Header.astro';
import ProgressBar from '../components/ProgressBar.vue';

import Main from './Main.astro';
import Footer from './Footer.astro';
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="title" content="Muhammad Umer Farooq" />
		<meta name="author" content="Muhammad Umer Farooq" />
		<meta name="url" content="https://lablnet.com/" />
		<meta name="type" content="website" />
		<meta name="image" content="../assets/images/umer.jpg" />
		<meta name=" keywords" content="portfolio,umer,web developer,software developer" />
		<meta name="description"
		  content="Hi there, I'm a Software Developer. I love building and rebuilding open source products. I have experience in Full Stack software development, including Web, Mobile applications, Desktop applications, web scraping, web crawling, and API integrations, working on many projects. Beside all these..." />
		<meta name="og:title" content="Muhammad Umer Farooq" />
		<meta name="og:author" content="Muhammad Umer Farooq" />
		<meta name="og:url" content="https://lablnet.com/" />
		<meta name="og:type" content="website" />
		<meta name="og:image" content="../assets/images/umer.jpg" />
		<meta name=" og:keywords" content="portfolio,umer,web developer,software developer" />
		<meta name="og:description"
		  content="Hi there, I'm a Software Developer. I love building and rebuilding open source products. I have experience in Full Stack software development, including Web, Mobile applications, Desktop applications, web scraping, web crawling, and API integrations, working on many projects. Beside all these..." />
		<meta name="theme-color" content="#ffffff" />
			  <meta name="viewport" content="width=device-width" />
		<link rel="icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500&display=swap"
			rel="stylesheet"
		/>
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/devicons/devicon@v2.16.0/devicon.min.css" />
		<title>{title}</title>

		{!import.meta.env.DEV && (
		<!-- Global site tag (gtag.js) - Google Analytics -->
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-JKMM6EQFM6"></script>
		<script lang="js">
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				dataLayer.push(arguments);
			}
			gtag('js', new Date());

			gtag('config', 'G-JKMM6EQFM6');
		</script>
		)}
	</head>
	<body id="app-theme" class="app-theme min-h-screen bg-gradient-to-br from-muf-50 via-muf-blue-50 to-muf-blue-100 dark:from-gray-900 dark:via-muf-900 dark:to-muf-blue-900">
		<!-- Apple Liquid Design 2025 - Enhanced animated background elements -->
		<div class="fixed inset-0 overflow-hidden pointer-events-none">
			<!-- Primary liquid orb -->
			<div class="absolute -top-4 -right-4 w-80 h-80 bg-gradient-to-br from-muf-300 via-muf-400 to-muf-500 dark:from-muf-600 dark:via-muf-700 dark:to-muf-800 rounded-full mix-blend-multiply dark:mix-blend-normal liquid-bg-element opacity-60"></div>
			
			<!-- Secondary liquid orb -->
			<div class="absolute -bottom-8 -left-4 w-96 h-96 bg-gradient-to-tr from-muf-blue-300 via-muf-blue-400 to-muf-blue-500 dark:from-muf-blue-600 dark:via-muf-blue-700 dark:to-muf-blue-800 rounded-full mix-blend-multiply dark:mix-blend-normal liquid-bg-element opacity-50"></div>
			
			<!-- Tertiary morphing orb -->
			<div class="absolute -top-24 left-20 w-72 h-72 bg-gradient-to-bl from-muf-400 via-muf-blue-300 to-muf-500 dark:from-muf-700 dark:via-muf-blue-600 dark:to-muf-800 liquid-bg-element liquid-morph opacity-55"></div>
			
			<!-- Additional ambient orbs for depth -->
			<div class="absolute top-1/3 right-1/4 w-64 h-64 bg-gradient-to-r from-muf-blue-200 to-muf-300 dark:from-muf-blue-800 dark:to-muf-700 rounded-full mix-blend-multiply dark:mix-blend-normal liquid-bg-element opacity-40" style="animation-delay: -6s; animation-duration: 14s;"></div>
			
			<div class="absolute bottom-1/4 left-1/3 w-56 h-56 bg-gradient-to-l from-muf-200 to-muf-blue-200 dark:from-muf-800 dark:to-muf-blue-700 rounded-full mix-blend-multiply dark:mix-blend-normal liquid-bg-element opacity-35" style="animation-delay: -8s; animation-duration: 16s;"></div>
		</div>

		<div class="light relative z-10">
			<!-- Header -->
			<Header />
			<div class="">
				<ProgressBar client:only />
			</div>
			
			<!-- Main -->
			<Main><slot /></Main>

			<!-- Footer -->
			<Footer />

			<!-- Back to top Button -->
			<button
			class="backtotop hidden glass-button mb-2 text-gray-800 dark:text-white transition-all duration-300 hover:scale-110 liquid-interactive"
			id="backtotop"
			title="Go to top"
		  >
			<i class="fa fa-arrow-up text-base md:text-lg"></i>
		  </button>
		</div>
	</body>

	<script src="../utils/theme.js"></script>
	<script lang="js">

		// mobile menu
		let menuVisible = false;

		function toggleMenu() {
			const nav = document.getElementById('nav');
			menuVisible = !menuVisible;
			// @ts-ignore
			nav.classList.toggle('hidden', !menuVisible);
		}

		let elements = document.getElementsByClassName('menu-item');
		for (let i = 0; i < elements.length; i++) {
			elements[i].addEventListener('click', toggleMenu);
		}
		// @ts-ignore
		document.getElementById('menu-button').addEventListener('click', toggleMenu);

		// Apple Liquid Design 2025 - Dynamic adaptation on scroll
		let lastScrollY = window.scrollY;
		let ticking = false;

		function updateNavigation() {
			const header = document.querySelector('header');
			const glassNav = header?.querySelector('.glass-nav');
			
			if (glassNav) {
				const currentScrollY = window.scrollY;
				
				// Add scrolled class for enhanced blur when scrolling
				if (currentScrollY > 50) {
					glassNav.classList.add('scrolled');
				} else {
					glassNav.classList.remove('scrolled');
				}
				
				// Direction-based expansion/contraction
				if (currentScrollY > lastScrollY && currentScrollY > 100) {
					// Scrolling down - contract
					glassNav.classList.remove('expanded');
					glassNav.classList.add('scrolled');
				} else if (currentScrollY < lastScrollY) {
					// Scrolling up - expand
					glassNav.classList.add('expanded');
				}
				
				lastScrollY = currentScrollY;
			}
			
			ticking = false;
		}

		function requestNavUpdate() {
			if (!ticking) {
				requestAnimationFrame(updateNavigation);
				ticking = true;
			}
		}

		// Enhanced scroll handling with liquid design principles
		window.addEventListener('scroll', function () {
			requestNavUpdate();
			
			// Back to top button with liquid animation
			let _top = document.querySelector('#backtotop');
			if (window.scrollY > 100) {
				_top.classList.remove('hidden');
				_top.classList.add('liquid-interactive');
			} else {
				_top.classList.add('hidden');
				_top.classList.remove('liquid-interactive');
			}
		});

		// Back to top button with smooth liquid scroll
		let _top = document.querySelector('#backtotop');
		_top.addEventListener('click', function () {
			window.scrollTo({
				top: 0,
				behavior: 'smooth'
			});
		});

		// Apple Liquid Design 2025 - Interactive glass effects
		document.addEventListener('DOMContentLoaded', function() {
			// Add liquid interactive effects to all glass cards
			const glassCards = document.querySelectorAll('.glass-card');
			
			glassCards.forEach(card => {
				card.addEventListener('mouseenter', function(e) {
					this.classList.add('liquid-interactive');
				});
				
				card.addEventListener('mouseleave', function(e) {
					this.classList.remove('liquid-interactive');
				});
				
				// Touch interaction for mobile
				card.addEventListener('touchstart', function(e) {
					this.classList.add('liquid-interactive');
				});
				
				card.addEventListener('touchend', function(e) {
					setTimeout(() => {
						this.classList.remove('liquid-interactive');
					}, 200);
				});
			});

			// Parallax effect for background elements
			window.addEventListener('scroll', function() {
				const scrolled = window.pageYOffset;
				const liquidElements = document.querySelectorAll('.liquid-bg-element');
				
				liquidElements.forEach((element, index) => {
					const speed = 0.5 + (index * 0.1);
					const yPos = -(scrolled * speed);
					element.style.transform = `translateY(${yPos}px)`;
				});
			});
		});
	</script>
</html>
