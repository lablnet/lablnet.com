---
// @ts-ignore
import { getCollection } from 'astro:content';
import { meta } from '../../utils/const';

// get props from Astro props.

let { type = 'companies', title = meta.company.title, description = meta.company.description } = Astro.props;

import { df, compareByDate } from '../../utils/index.ts';
let companies: any = [];

if (type === 'companies') {
	companies = await getCollection('companies', (p: any) => p.data.featured);
} else {
	companies = await getCollection('companies', (p: any) => p.data.type === 'project');
}
companies.sort(compareByDate);
let step = companies.length + 1;

let _klass = `mt-12 py-10 px-5 container `;
_klass += type === 'companies' ? `dark:bg-gray-700` : `bg-gray-200 dark:bg-gray-900`;
---

<section class="py-2" id={type}>
	<div class="mb-8">
		<h2 class="text-3xl font-bold mb-4 bg-gradient-to-r from-muf-500 via-muf-blue-500 to-muf-blue-600 bg-clip-text text-transparent flex items-center">
			<i class={`fa-solid ${type === 'companies' ? 'fa-briefcase' : 'fa-diagram-project'} bg-gradient-to-r from-muf-500 to-muf-blue-500 bg-clip-text text-transparent mr-3`}></i>
			{title}
		</h2>
		<p class="text-gray-700 dark:text-gray-300 text-lg leading-relaxed">{description}</p>
	</div>

	<div class="space-y-6">
		{
			companies.map(async (company: any, index: any) => {
				const { Content } = await company.render();
				step--;
				return (
					<div class="glass-card p-6 hover:scale-102 transition-all duration-300 animate-slide-up" style={`animation-delay: ${index * 0.1}s;`}>
						<div class="flex items-start gap-6">
							<div class="flex-shrink-0">
								<img
									class="rounded-xl w-16 h-16 object-cover shadow-lg border-2 border-white/20"
									width="64"
									height="64"
									src={company.data.icon}
									alt={company.data.title}
								/>
							</div>
							<div class="flex-grow">
								<div class="flex flex-wrap items-center gap-3 mb-3">
									<div class="glass px-3 py-1 rounded-full text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gradient-to-r hover:from-muf-500 hover:to-muf-blue-500 hover:bg-clip-text hover:text-transparent transition-all duration-300">
										<i class="fa-solid fa-calendar mr-2"></i>
										{df.format(company.data.startDate)} - {company.data.endDate ? df.format(company.data.endDate) : 'Present'}
									</div>
								</div>
								
								<h3 class="text-xl font-bold text-gray-800 dark:text-gray-200 mb-2">
									<a class="bg-gradient-to-r from-muf-500 to-muf-blue-500 bg-clip-text text-transparent hover:text-gray-800 dark:hover:text-gray-200 hover:bg-none transition-all duration-300 arrow" href={`/${company.slug}`}>
										{company.data.name === 'Upwork' ? (
											<img
												src="../assets/icons/topratedplus.svg"
												alt="Upwork"
												class="w-6 h-6 inline mr-2"
											/>
										) : null}
										{company.data.title}
									</a>
									<span class="mx-2 text-gray-400">@</span>
									<a
										class="bg-gradient-to-r from-muf-500 to-muf-blue-500 bg-clip-text text-transparent hover:text-gray-800 dark:hover:text-gray-200 hover:bg-none transition-all duration-300 arrow"
										href={company.data.link}
										target="_blank"
									>
										{company.data.name}
									</a>
								</h3>
								
								<div class="prose dark:text-gray-300 text-gray-700 leading-relaxed">
									<Content />
								</div>
							</div>
						</div>
					</div>
				);
			})
		}
	</div>
	{
		type === 'projects' ? (
			<a href="/projects" class="mr-4 float-right prose dark:text-gray-300 arrow">
				More Projects
			</a>
		) : (
			<div class="mb-12 md:mb-0">
				<a href="/fiverr" class="mr-4 float-right prose dark:text-gray-300 arrow">
					Fiverr Projects
				</a>
				<a href="/direct" class="mr-4 float-right prose dark:text-gray-300 arrow">
					Direct Client Projects
				</a>
			</div>
		)
	}
</section>

